#!/bin/bash

output_file="./backend/src/server.js"
input_file="./App/table_list"

echo "const {inject, errorHandler} = require('express-custom-error');
inject(); 

const express = require('express');
const cookieParser = require('cookie-parser');
const cors = require('cors');
const helmet = require('helmet');

const logger = require('./util/logger');
" > $output_file

while read line
do
  echo "const $line"" = require('./routes/$line"".js')" >> $output_file
done < "$input_file"

echo "

require('mandatoryenv').load([
    'DB_HOST',
    'DB_DATABASE',
    'DB_USER',
    'DB_PASSWORD',
    'PORT'
]);

// 18.7.0

const { PORT } = process.env;


// Instantiate an Express Application
const app = express();


// Configure Express App Instance
app.use(express.json( { limit: '50mb' } ));
app.use(express.urlencoded( { extended: true, limit: '10mb' } ));

// Configure custom logger middleware
app.use(logger.dev, logger.combined);

app.use(cookieParser());
app.use(cors());
app.use(helmet());

// This middleware adds the json header to every response
app.use('*', (req, res, next) => {
    res.setHeader('Content-Type', 'application/json');
    next();
})

// Assign Routes

app.use('/', require('./routes/router.js'));" >> $output_file

while read line
do
  echo "app.use('/$line'"", $line);" >> $output_file
done < $input_file

echo "
// Handle errors
app.use(errorHandler());

// Handle not valid route
app.use('*', (req, res) => {
    res
    .status(404)
    .json( {status: false, message: 'Endpoint Not Found'} );
});

// Open Server on selected Port
app.listen(
    PORT,
    () => console.info('Server listening on port ', PORT)
);" >> $output_file